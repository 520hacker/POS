<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AITMmP8HHk+zEY8SizgAAAAASUVORK5CYII=
</value>
  </data>
</root>